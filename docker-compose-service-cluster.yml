version: '3'
services:
  user_server:
    image: 'examples_user_server'
    # build: 
    #   context: .
    ports:
      - "8030:8030"
    networks:
      - sanic-network
    environment:
      POSTGRES_SERVICE_DB_NAME: postgres
      POSTGRES_SERVICE_USER: postgres
      POSTGRES_SERVICE_HOST: db
      POSTGRES_SERVICE_PORT: 5432
      ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      ACCESS_CONTROL_ALLOW_HEADERS: "Content-Type"
      ACCESS_CONTROL_ALLOW_METHODS: "POST, PUT, DELETE, GET"
      ZIPKIN_SERVER: 'http://zipkin:9411/api/v1/spans'
      CONSUL_AGENT_HOST: 'consul'
      CONSUL_AGENT_PORT: 8500
      #command: python -m sanic server.app --host=0.0.0.0 --port=8000 --workers=4
    command: ["python", "-m", "server"]
    #command: ["python", "-m", 'sanic', "service.server.app", "--workers=4", "--port=8000", "--host=0.0.0.0"]
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker

  region_server:
    image: 'examples_region_server'
    # build: 
    #   context: .
    ports:
      - "8050:8050"
    networks:
      - sanic-network
    environment:
      POSTGRES_SERVICE_DB_NAME: postgres
      POSTGRES_SERVICE_USER: postgres
      POSTGRES_SERVICE_HOST: db
      POSTGRES_SERVICE_PORT: 5432
      ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      ACCESS_CONTROL_ALLOW_HEADERS: "Content-Type"
      ACCESS_CONTROL_ALLOW_METHODS: "POST, PUT, DELETE, GET"
      ZIPKIN_SERVER: 'http://zipkin:9411/api/v1/spans'
      CONSUL_AGENT_HOST: 'consul'
      CONSUL_AGENT_PORT: 8500
      #command: python -m sanic server.app --host=0.0.0.0 --port=8000 --workers=4
    command: ["python", "-m", "server"]
    #command: ["python", "-m", 'sanic', "service.server.app", "--workers=4", "--port=8000", "--host=0.0.0.0"]
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker

  role_server:
    image: 'examples_role_server'
    # build: 
    #   context: .
    ports:
      - "8020:8020"
    networks:
      - sanic-network
    environment:
      POSTGRES_SERVICE_DB_NAME: postgres
      POSTGRES_SERVICE_USER: postgres
      POSTGRES_SERVICE_HOST: db
      POSTGRES_SERVICE_PORT: 5432
      ACCESS_CONTROL_ALLOW_ORIGIN: "*"
      ACCESS_CONTROL_ALLOW_HEADERS: "Content-Type"
      ACCESS_CONTROL_ALLOW_METHODS: "POST, PUT, DELETE, GET"
      ZIPKIN_SERVER: 'http://zipkin:9411/api/v1/spans'
      CONSUL_AGENT_HOST: 'consul'
      CONSUL_AGENT_PORT: 8500
      #command: python -m sanic server.app --host=0.0.0.0 --port=8000 --workers=4
    command: ["python", "-m", "server"]
    #command: ["python", "-m", 'sanic', "service.server.app", "--workers=4", "--port=8000", "--host=0.0.0.0"]
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker

networks:
  sanic-network:
    external:
        name: ms_sanic-network